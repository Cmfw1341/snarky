type char
type float
type int
type int' = int
type record = {
  one: int ;
  two: int' ;
  three: int }
type string
type unit = unit
type variant =
  | A 
  | B 
  | C 
type variant2 =
  | A of int 
  | B of unit * int 
  | C of variant2 
val a : int
val b : int
val c :
  (((('a -> 'a) -> ('a -> 'a) -> 'a) -> ('a -> 'a) -> ('a -> 'a) -> 'a) ->
     ((('a -> 'a) -> ('a -> 'a) -> 'a) -> ('a -> 'a) -> ('a -> 'a) -> 'a) ->
       ('a -> 'a) -> ('a -> 'a) -> 'a)
    ->
    ((('a -> 'a) -> ('a -> 'a) -> 'a) -> ('a -> 'a) -> ('a -> 'a) -> 'a) ->
      ((('a -> 'a) -> ('a -> 'a) -> 'a) -> ('a -> 'a) -> ('a -> 'a) -> 'a) ->
        ('a -> 'a) -> ('a -> 'a) -> 'a
val d : unit
val e : int
val f : 'a
val g : 'a -> 'a
val h : (int -> '_a138) -> '_a144
val i : ('b -> 'b) -> 'b -> 'b
val j : 'a
val k : (int -> int) -> int -> int
val l : (int * int * int)
val m : ((int * int * int) * int * int * (int * (int * int)))
val n : (unit * unit * unit)
val o :
  ((int * int * (int * int * (int * int * unit))) ->
     (int * int * (int * int * (int * int * unit))) ->
       (int * int * (int * int * (int * int * unit))))
    -> (int * int * (int * int * (int * int * unit)))
val one : int'
val p : int -> int'
val q : int
val r : record -> (int * int)
val record : record
val s : record -> record
val t : (((int -> int -> '_a364) * record) * int) -> '_a364
val two : (record -> record) -> record
val x : int
val y : int
